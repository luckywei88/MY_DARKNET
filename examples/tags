!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
abs_mean	nightmare.c	/^float abs_mean(float *x, int n)$/;"	f
average	darknet.c	/^void average(int argc, char *argv[])$/;"	f
board_to_string	go.c	/^void board_to_string(char *s, float *board)$/;"	f
calculate_liberties	go.c	/^int *calculate_liberties(float *board)$/;"	f
calculate_loss	nightmare.c	/^void calculate_loss(float *output, float *delta, int n, float thresh)$/;"	f
coco_classes	coco.c	/^char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};$/;"	v
coco_ids	coco.c	/^int coco_ids[] = {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,70,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90};$/;"	v
coco_ids	detector.c	/^static int coco_ids[] = {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,70,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90};$/;"	v	file:
data	go.c	/^    char **data;$/;"	m	struct:__anon3	file:
dcgan_batch	lsd.c	/^void dcgan_batch(network gnet, network anet)$/;"	f
demo_art	art.c	/^void demo_art(char *cfgfile, char *weightfile, int cam_index)$/;"	f
demo_classifier	classifier.c	/^void demo_classifier(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
demo_regressor	regressor.c	/^void demo_regressor(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
demo_segmenter	segmenter.c	/^void demo_segmenter(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
denormalize_net	darknet.c	/^void denormalize_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
dice_labels	dice.c	/^char *dice_labels[] = {"face1","face2","face3","face4","face5","face6"};$/;"	v
engine_go	go.c	/^void engine_go(char *filename, char *weightfile, int multi)$/;"	f
eval_cifar_csv	cifar.c	/^void eval_cifar_csv()$/;"	f
extract_cifar	cifar.c	/^void extract_cifar()$/;"	f
extract_voxel	voxel.c	/^void extract_voxel(char *lfile, char *rfile, char *prefix)$/;"	f
fgetgo	go.c	/^char *fgetgo(FILE *fp)$/;"	f
fix_data_captcha	captcha.c	/^void fix_data_captcha(data d, int mask)$/;"	f
flip_board	go.c	/^void flip_board(float *board)$/;"	f
float_pair	rnn.c	/^} float_pair;$/;"	t	typeref:struct:__anon2	file:
float_pair	rnn_vid.c	/^} float_pair;$/;"	t	typeref:struct:__anon1	file:
generate_move	go.c	/^int generate_move(network net, int player, float *board, int multi, float thresh, float temp, char *ko, int print)$/;"	f
generate_vid_rnn	rnn_vid.c	/^void generate_vid_rnn(char *cfgfile, char *weightfile)$/;"	f
get_coco_image_id	coco.c	/^int get_coco_image_id(char *filename)$/;"	f
get_coco_image_id	detector.c	/^static int get_coco_image_id(char *filename)$/;"	f	file:
get_regression_values	classifier.c	/^float *get_regression_values(char **labels, int n)$/;"	f
get_rnn_data	rnn.c	/^float_pair get_rnn_data(unsigned char *text, size_t *offsets, int characters, size_t len, int batch, int steps)$/;"	f
get_rnn_token_data	rnn.c	/^float_pair get_rnn_token_data(int *tokens, size_t *offsets, int characters, size_t len, int batch, int steps)$/;"	f
get_rnn_vid_data	rnn_vid.c	/^float_pair get_rnn_vid_data(network net, char **files, int n, int batch, int steps)$/;"	f
gun_classifier	classifier.c	/^void gun_classifier(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
inverted	go.c	/^int inverted = 1;$/;"	v
label_classifier	classifier.c	/^void label_classifier(char *datacfg, char *filename, char *weightfile)$/;"	f
legal_go	go.c	/^int legal_go(float *b, char *ko, int p, int r, int c)$/;"	f
load_go_moves	go.c	/^moves load_go_moves(char *filename)$/;"	f
main	darknet.c	/^int main(int argc, char **argv)$/;"	f
makes_safe_go	go.c	/^int makes_safe_go(float *b, int *lib, int p, int r, int c){$/;"	f
mkimg	darknet.c	/^void mkimg(char *cfgfile, char *weightfile, int h, int w, int num, char *prefix)$/;"	f
move_go	go.c	/^void move_go(float *b, int p, int r, int c)$/;"	f
moves	go.c	/^} moves;$/;"	t	typeref:struct:__anon3	file:
n	go.c	/^    int n;$/;"	m	struct:__anon3	file:
nind	go.c	/^static const int nind = 2;$/;"	v	file:
noi	go.c	/^int noi = 1;$/;"	v
normalize_layer	darknet.c	/^layer normalize_layer(layer l, int n)$/;"	f
normalize_net	darknet.c	/^void normalize_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
oneoff	darknet.c	/^void oneoff(char *cfgfile, char *weightfile, char *outfile)$/;"	f
oneoff2	darknet.c	/^void oneoff2(char *cfgfile, char *weightfile, char *outfile, int l)$/;"	f
operations	darknet.c	/^void operations(char *cfgfile)$/;"	f
optimize_picture	nightmare.c	/^void optimize_picture(network *net, image orig, int max_layer, float scale, float rate, float thresh, int norm)$/;"	f
partial	darknet.c	/^void partial(char *cfgfile, char *weightfile, char *outfile, int max)$/;"	f
predict_classifier	classifier.c	/^void predict_classifier(char *datacfg, char *cfgfile, char *weightfile, char *filename, int top)$/;"	f
predict_move	go.c	/^void predict_move(network net, float *board, float *move, int multi)$/;"	f
predict_regressor	regressor.c	/^void predict_regressor(char *cfgfile, char *weightfile, char *filename)$/;"	f
predict_segmenter	segmenter.c	/^void predict_segmenter(char *datafile, char *cfgfile, char *weightfile, char *filename)$/;"	f
print_board	go.c	/^void print_board(FILE *stream, float *board, int swap, int *indexes)$/;"	f
print_cocos	coco.c	/^void print_cocos(FILE *fp, int image_id, box *boxes, float **probs, int num_boxes, int classes, int w, int h)$/;"	f
print_cocos	detector.c	/^static void print_cocos(FILE *fp, char *image_path, box *boxes, float **probs, int num_boxes, int classes, int w, int h)$/;"	f	file:
print_detector_detections	detector.c	/^void print_detector_detections(FILE **fps, char *id, box *boxes, float **probs, int total, int classes, int w, int h)$/;"	f
print_game	go.c	/^int print_game(float *board, FILE *fp)$/;"	f
print_imagenet_detections	detector.c	/^void print_imagenet_detections(FILE *fp, int id, box *boxes, float **probs, int total, int classes, int w, int h)$/;"	f
print_symbol	rnn.c	/^void print_symbol(int n, char **tokens){$/;"	f
print_yolo_detections	yolo.c	/^void print_yolo_detections(FILE **fps, char *id, box *boxes, float **probs, int total, int classes, int w, int h)$/;"	f
propagate_liberty	go.c	/^void propagate_liberty(float *board, int *lib, int *visited, int row, int col, int side)$/;"	f
random_go_moves	go.c	/^data random_go_moves(moves m, int n)$/;"	f
read_tokenized_data	rnn.c	/^int *read_tokenized_data(char *filename, size_t *read)$/;"	f
read_tokens	rnn.c	/^char **read_tokens(char *filename, size_t *read)$/;"	f
reconstruct_picture	nightmare.c	/^void reconstruct_picture(network net, float *features, image recon, image update, float rate, float momentum, float lambda, int smooth_size, int iters)$/;"	f
remove_connected	go.c	/^void remove_connected(float *b, int *lib, int p, int r, int c)$/;"	f
rescale_net	darknet.c	/^void rescale_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
reset_normalize_net	darknet.c	/^void reset_normalize_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
rgbgr_net	darknet.c	/^void rgbgr_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
run_art	art.c	/^void run_art(int argc, char **argv)$/;"	f
run_captcha	captcha.c	/^void run_captcha(int argc, char **argv)$/;"	f
run_char_rnn	rnn.c	/^void run_char_rnn(int argc, char **argv)$/;"	f
run_cifar	cifar.c	/^void run_cifar(int argc, char **argv)$/;"	f
run_classifier	classifier.c	/^void run_classifier(int argc, char **argv)$/;"	f
run_coco	coco.c	/^void run_coco(int argc, char **argv)$/;"	f
run_detector	detector.c	/^void run_detector(int argc, char **argv)$/;"	f
run_dice	dice.c	/^void run_dice(int argc, char **argv)$/;"	f
run_go	go.c	/^void run_go(int argc, char **argv)$/;"	f
run_lsd	lsd.c	/^void run_lsd(int argc, char **argv)$/;"	f
run_nightmare	nightmare.c	/^void run_nightmare(int argc, char **argv)$/;"	f
run_regressor	regressor.c	/^void run_regressor(int argc, char **argv)$/;"	f
run_segmenter	segmenter.c	/^void run_segmenter(int argc, char **argv)$/;"	f
run_super	super.c	/^void run_super(int argc, char **argv)$/;"	f
run_swag	swag.c	/^void run_swag(int argc, char **argv)$/;"	f
run_tag	tag.c	/^void run_tag(int argc, char **argv)$/;"	f
run_vid_rnn	rnn_vid.c	/^void run_vid_rnn(int argc, char **argv)$/;"	f
run_vid_rnn	rnn_vid.c	/^void run_vid_rnn(int argc, char **argv){}$/;"	f
run_voxel	voxel.c	/^void run_voxel(int argc, char **argv)$/;"	f
run_writing	writing.c	/^void run_writing(int argc, char **argv)$/;"	f
run_yolo	yolo.c	/^void run_yolo(int argc, char **argv)$/;"	f
save_reconstruction	rnn_vid.c	/^image save_reconstruction(network net, image *init, float *feat, char *name, int i)$/;"	f
score_game	go.c	/^float score_game(float *board)$/;"	f
self_go	go.c	/^void self_go(char *filename, char *weightfile, char *f2, char *w2, int multi)$/;"	f
smooth	nightmare.c	/^void smooth(image recon, image update, float lambda, int num)$/;"	f
speed	darknet.c	/^void speed(char *cfgfile, int tics)$/;"	f
statistics_net	darknet.c	/^void statistics_net(char *cfgfile, char *weightfile)$/;"	f
string_to_board	go.c	/^void string_to_board(char *s, float *board)$/;"	f
suicide_go	go.c	/^int suicide_go(float *b, int p, int r, int c)$/;"	f
test_captcha	captcha.c	/^void test_captcha(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_char_rnn	rnn.c	/^void test_char_rnn(char *cfgfile, char *weightfile, int num, char *seed, float temp, int rseed, char *token_file)$/;"	f
test_cifar	cifar.c	/^void test_cifar(char *filename, char *weightfile)$/;"	f
test_cifar_csv	cifar.c	/^void test_cifar_csv(char *filename, char *weightfile)$/;"	f
test_cifar_csvtrain	cifar.c	/^void test_cifar_csvtrain(char *filename, char *weightfile)$/;"	f
test_cifar_multi	cifar.c	/^void test_cifar_multi(char *filename, char *weightfile)$/;"	f
test_classifier	classifier.c	/^void test_classifier(char *datacfg, char *cfgfile, char *weightfile, int target_layer)$/;"	f
test_coco	coco.c	/^void test_coco(char *cfgfile, char *weightfile, char *filename, float thresh)$/;"	f
test_dcgan	lsd.c	/^void test_dcgan(char *cfgfile, char *weightfile)$/;"	f
test_detector	detector.c	/^void test_detector(char *datacfg, char *cfgfile, char *weightfile, char *filename, float thresh, float hier_thresh, char *outfile, int fullscreen)$/;"	f
test_dice	dice.c	/^void test_dice(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_go	go.c	/^void test_go(char *cfg, char *weights, int multi)$/;"	f
test_lsd	lsd.c	/^void test_lsd(char *cfgfile, char *weightfile, char *filename, int gray)$/;"	f
test_super	super.c	/^void test_super(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_tactic_rnn	rnn.c	/^void test_tactic_rnn(char *cfgfile, char *weightfile, int num, float temp, int rseed, char *token_file)$/;"	f
test_tactic_rnn_multi	rnn.c	/^void test_tactic_rnn_multi(char *cfgfile, char *weightfile, int num, float temp, int rseed, char *token_file)$/;"	f
test_tag	tag.c	/^void test_tag(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_voxel	voxel.c	/^void test_voxel(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_writing	writing.c	/^void test_writing(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_yolo	yolo.c	/^void test_yolo(char *cfgfile, char *weightfile, char *filename, float thresh)$/;"	f
threat_classifier	classifier.c	/^void threat_classifier(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
train_captcha	captcha.c	/^void train_captcha(char *cfgfile, char *weightfile)$/;"	f
train_char_rnn	rnn.c	/^void train_char_rnn(char *cfgfile, char *weightfile, char *filename, int clear, int tokenized)$/;"	f
train_cifar	cifar.c	/^void train_cifar(char *cfgfile, char *weightfile)$/;"	f
train_cifar_distill	cifar.c	/^void train_cifar_distill(char *cfgfile, char *weightfile)$/;"	f
train_classifier	classifier.c	/^void train_classifier(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear)$/;"	f
train_coco	coco.c	/^void train_coco(char *cfgfile, char *weightfile)$/;"	f
train_colorizer	lsd.c	/^void train_colorizer(char *cfg, char *weight, char *acfg, char *aweight, int clear, int display)$/;"	f
train_dcgan	lsd.c	/^void train_dcgan(char *cfg, char *weight, char *acfg, char *aweight, int clear, int display, char *train_images)$/;"	f
train_detector	detector.c	/^void train_detector(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear)$/;"	f
train_dice	dice.c	/^void train_dice(char *cfgfile, char *weightfile)$/;"	f
train_go	go.c	/^void train_go(char *cfgfile, char *weightfile, char *filename, int *gpus, int ngpus, int clear)$/;"	f
train_regressor	regressor.c	/^void train_regressor(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear)$/;"	f
train_segmenter	segmenter.c	/^void train_segmenter(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear, int display)$/;"	f
train_super	super.c	/^void train_super(char *cfgfile, char *weightfile, int clear)$/;"	f
train_swag	swag.c	/^void train_swag(char *cfgfile, char *weightfile)$/;"	f
train_tag	tag.c	/^void train_tag(char *cfgfile, char *weightfile, int clear)$/;"	f
train_vid_rnn	rnn_vid.c	/^void train_vid_rnn(char *cfgfile, char *weightfile)$/;"	f
train_voxel	voxel.c	/^void train_voxel(char *cfgfile, char *weightfile)$/;"	f
train_writing	writing.c	/^void train_writing(char *cfgfile, char *weightfile)$/;"	f
train_yolo	yolo.c	/^void train_yolo(char *cfgfile, char *weightfile)$/;"	f
try_classifier	classifier.c	/^void try_classifier(char *datacfg, char *cfgfile, char *weightfile, char *filename, int layer_num)$/;"	f
valid_captcha	captcha.c	/^void valid_captcha(char *cfgfile, char *weightfile, char *filename)$/;"	f
valid_char_rnn	rnn.c	/^void valid_char_rnn(char *cfgfile, char *weightfile, char *seed)$/;"	f
valid_go	go.c	/^void valid_go(char *cfgfile, char *weightfile, int multi, char *filename)$/;"	f
valid_tactic_rnn	rnn.c	/^void valid_tactic_rnn(char *cfgfile, char *weightfile, char *seed)$/;"	f
validate_classifier_10	classifier.c	/^void validate_classifier_10(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_classifier_crop	classifier.c	/^void validate_classifier_crop(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_classifier_full	classifier.c	/^void validate_classifier_full(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_classifier_multi	classifier.c	/^void validate_classifier_multi(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_classifier_single	classifier.c	/^void validate_classifier_single(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_coco	coco.c	/^void validate_coco(char *cfgfile, char *weightfile)$/;"	f
validate_coco_recall	coco.c	/^void validate_coco_recall(char *cfgfile, char *weightfile)$/;"	f
validate_detector	detector.c	/^void validate_detector(char *datacfg, char *cfgfile, char *weightfile, char *outfile)$/;"	f
validate_detector_flip	detector.c	/^void validate_detector_flip(char *datacfg, char *cfgfile, char *weightfile, char *outfile)$/;"	f
validate_detector_recall	detector.c	/^void validate_detector_recall(char *cfgfile, char *weightfile)$/;"	f
validate_dice	dice.c	/^void validate_dice(char *filename, char *weightfile)$/;"	f
validate_yolo	yolo.c	/^void validate_yolo(char *cfgfile, char *weightfile)$/;"	f
validate_yolo_recall	yolo.c	/^void validate_yolo_recall(char *cfgfile, char *weightfile)$/;"	f
vec_char_rnn	rnn.c	/^void vec_char_rnn(char *cfgfile, char *weightfile, char *seed)$/;"	f
visualize	darknet.c	/^void visualize(char *cfgfile, char *weightfile)$/;"	f
voc_names	yolo.c	/^char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};$/;"	v
x	rnn.c	/^    float *x;$/;"	m	struct:__anon2	file:
x	rnn_vid.c	/^    float *x;$/;"	m	struct:__anon1	file:
y	rnn.c	/^    float *y;$/;"	m	struct:__anon2	file:
y	rnn_vid.c	/^    float *y;$/;"	m	struct:__anon1	file:
